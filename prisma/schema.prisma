// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Alamat {
  alamatId           String               @id @default(uuid()) @map("alamat_id") @db.Uuid
  namaAlamat         String?              @map("nama_alamat")
  desaId             String?              @map("desa_id") @db.Uuid
  urutan             Int?
  alamat             String?
  createdAt          DateTime?            @map("created_at")
  updatedAt          DateTime?            @map("updated_at")
  kodePos            String?              @map("kode_pos")
  deletedAt          DateTime?            @map("deleted_at")
  Desa               Desa?                @relation(fields: [desaId], references: [desaId])
  OrderPengiriman    OrderPengiriman[]
  AlamatGudang       AlamatGudang[]
  AlamatBpp          AlamatBpp[]
  AlamatKelompokTani AlamatKelompokTani[]
  AlamatMember       AlamatMember[]
  AlamatPenyedia     AlamatPenyedia[]
  LahanUsaha         LahanUsaha[]
  Koordinat          Koordinat[]

  @@map("alamat")
}

model AlamatBpp {
  alamatId String @map("alamat_id") @db.Uuid
  bppId    String @map("bpp_id") @db.Uuid
  alamat   Alamat @relation(fields: [alamatId], references: [alamatId])
  bpp      Bpp    @relation(fields: [bppId], references: [bppId])

  @@id([alamatId, bppId])
  @@map("alamat_bpp")
}

model AlamatGudang {
  gudangId String @map("gudang_id") @db.Uuid
  alamatId String @map("alamat_id") @db.Uuid
  Gudang   Gudang @relation(fields: [gudangId], references: [gudangId])
  alamat   Alamat @relation(fields: [alamatId], references: [alamatId])

  @@id([gudangId, alamatId])
  @@map("alamat_gudang")
}

model AlamatKelompokTani {
  alamatId       String       @map("alamat_id") @db.Uuid
  kelompokTaniId String       @map("kelompok_tani_id") @db.Uuid
  alamat         Alamat       @relation(fields: [alamatId], references: [alamatId])
  kelompokTani   KelompokTani @relation(fields: [kelompokTaniId], references: [kelompokTaniId])

  @@id([alamatId, kelompokTaniId])
  @@map("alamat_kelompok_tani")
}

model AlamatMember {
  memberId String @map("member_id") @db.Uuid
  alamatId String @map("alamat_id") @db.Uuid
  member   Member @relation(fields: [memberId], references: [memberId])
  alamat   Alamat @relation(fields: [alamatId], references: [alamatId])

  @@id([memberId, alamatId])
  @@map("alamat_member")
}

model AlamatPenyedia {
  alamatId         String         @map("alamat_id") @db.Uuid
  masterPenyediaId String         @map("master_penyedia_id") @db.Uuid
  alamat           Alamat         @relation(fields: [alamatId], references: [alamatId])
  masterPenyedia   MasterPenyedia @relation(fields: [masterPenyediaId], references: [masterPenyediaId])

  @@id([alamatId, masterPenyediaId])
  @@map("alamat_penyedia")
}

model Bank {
  bankId       String         @id @default(uuid()) @map("bank_id") @db.Uuid
  kodeBank     String?        @map("kode_bank")
  namaBank     String?        @map("nama_bank")
  icon         String?
  ProdukKur    ProdukKur[]
  RekeningBank RekeningBank[]

  @@map("bank")
}

model BiayaSaprotanPupuk {
  biayaSaprotanId    String            @id @default(uuid()) @map("biaya_saprotan_id") @db.Uuid
  jenisPupukId       String            @map("jenis_pupuk_id") @db.Uuid
  rencanaUsahaTaniId String            @map("rencana_usaha_tani_id") @db.Uuid
  jumlah             Decimal           @map("jumlah")
  satuanJumlah       String            @map("satuan_jumlah")
  harga              Decimal           @map("harga")
  deskripsi          String?
  JenisPupuk         JenisPupuk?       @relation(fields: [jenisPupukId], references: [jenisPupukId])
  RencanaUsahaTani   RencanaUsahaTani? @relation(fields: [rencanaUsahaTaniId], references: [rencanaUsahaTaniId])

  @@map("biaya_saprotan_pupuk")
}

model BiayaUsahaTani {
  biayaUsahaTaniId   String            @id @default(uuid()) @map("biaya_usaha_tani_id") @db.Uuid
  namaBiaya          String            @map("nama_biaya")
  jumlah             Decimal           @map("jumlah")
  satuanJumlah       String            @map("satuan_jumlah")
  harga              Decimal           @map("harga")
  keterangan         String?
  rencanaUsahaTaniId String?           @map("rencana_usaha_tani_id") @db.Uuid
  RencanaUsahaTani   RencanaUsahaTani? @relation(fields: [rencanaUsahaTaniId], references: [rencanaUsahaTaniId])

  @@map("biaya_usaha_tani")
}

model Bpp {
  bppId          String      @id @default(uuid()) @map("bpp_id") @db.Uuid
  namaBpp        String      @map("nama_bpp")
  wilayahKerja   String      @map("wilayah_kerja")
  createdAt      DateTime    @map("created_at")
  updatedAt      DateTime    @map("updated_at")
  kodeBpp        String      @map("kode_bpp")
  tanggalBerdiri DateTime    @map("tanggal_berdiri")
  nomorHp        String      @map("nomor_hp")
  deskripsi      String?
  Penyuluh       Penyuluh[]
  AlamatBpp      AlamatBpp[]

  @@map("bpp")
}

model ChildKategori {
  childKategoriId   String           @id @default(uuid()) @map("child_kategori_id") @db.Uuid
  subKategoriId     String           @map("sub_kategori_id") @db.Uuid
  namaChildKategori String           @map("nama_child_kategori")
  deskripsi         String?
  status            Boolean
  subKategori       SubKategori      @relation(fields: [subKategoriId], references: [subKategoriId])
  materialMaster    MaterialMaster[]

  @@map("child_kategori")
}

model ChildLayanan {
  childLayananId   String      @id @default(uuid()) @map("child_layanan_id") @db.Uuid
  namaChildLayanan String?     @map("nama_child_layanan")
  keterangan       String?
  icon             String?
  url              String?
  subLayananId     String?     @map("sub_layanan_id") @db.Uuid
  subLayanan       SubLayanan? @relation(fields: [subLayananId], references: [subLayananId])

  @@map("child_layanan")
}

model Deposit {
  depositId        String                  @id @default(uuid()) @map("deposit_id") @db.Uuid
  transaksiId      String                  @map("transaksi_id") @db.Uuid
  walletId         String                  @map("wallet_id") @db.Uuid
  metodeDeposit    MetodeDeposit           @map("metode_deposit")
  buktiTransfer    String                  @map("bukti_transfer")
  statusVerifikasi StatusVerifikasiDeposit @map("status_verifikasi")
  createdAt        DateTime                @map("created_at")
  updatedAt        DateTime                @map("updated_at")
  rekeningBankId   String                  @map("rekening_bank_id") @db.Uuid
  transaksi        Transaksi               @relation(fields: [transaksiId], references: [transaksiId])
  wallet           Wallet                  @relation(fields: [walletId], references: [walletId])
  rekeningBank     RekeningBank            @relation(fields: [rekeningBankId], references: [rekeningBankId])

  @@map("deposit")
}

model Desa {
  desaId         String     @id @default(uuid()) @map("desa_id") @db.Uuid
  kodeKemendagri String?    @map("kode_kemendagri")
  namaDesa       String?    @map("nama_desa")
  kecamatanId    String?    @map("kecamatan_id") @db.Uuid
  kecamatan      Kecamatan? @relation(fields: [kecamatanId], references: [kecamatanId])
  alamat         Alamat[]

  @@map("desa")
}

model DimensiMaterialMaster {
  dimensiMaterialMasterId String         @id @default(uuid()) @map("dimensi_material_master_id") @db.Uuid
  materialMasterId        String         @map("material_master_id") @db.Uuid
  panjang                 Decimal
  lebar                   Decimal
  tinggi                  Decimal
  satuanDimensi           String         @default("cm") @map("satuan_dimensi")
  beratKotor              Decimal        @default(0) @map("berat_kotor")
  beratBersih             Decimal        @default(0) @map("berat_bersih")
  satunBerat              String         @default("gram") @map("satun_berat")
  materialMaster          MaterialMaster @relation(fields: [materialMasterId], references: [materialMasterId])

  @@map("dimensi_material_master")
}

model Ealokasi {
  ealokasiId           String                 @id @default(uuid()) @map("ealokasi_id") @db.Uuid
  penyuluhId           String                 @map("penyuluh_id") @db.Uuid
  komoditasId          String                 @map("komoditas_id") @db.Uuid
  kelompokTaniId       String                 @map("kelompok_tani_id") @db.Uuid
  masterPenyediaId     String                 @map("master_penyedia_id") @db.Uuid
  masaTanamId          String                 @map("masa_tanam_id") @db.Uuid
  petaniId             String                 @map("petani_id") @db.Uuid
  luasLahan            Decimal?               @map("luas_lahan")
  tahun                String?
  penyuluh             Penyuluh               @relation(fields: [penyuluhId], references: [penyuluhId])
  komoditas            Komoditas              @relation(fields: [komoditasId], references: [komoditasId])
  kelompokTani         KelompokTani           @relation(fields: [kelompokTaniId], references: [kelompokTaniId])
  masterPenyedia       MasterPenyedia         @relation(fields: [masterPenyediaId], references: [masterPenyediaId])
  masaTanam            MasaTanam              @relation(fields: [masaTanamId], references: [masaTanamId])
  petani               Petani                 @relation(fields: [petaniId], references: [petaniId])
  ealokasiPupukSubsidi EalokasiPupukSubsidi[]

  @@map("ealokasi")
}

model EalokasiPupukSubsidi {
  ealokasiPupukSubsidiId        String                          @id @default(uuid()) @map("ealokasi_pupuk_subsidi_id") @db.Uuid
  jenisPupukId                  String                          @map("jenis_pupuk_id") @db.Uuid
  jumlah                        Decimal
  ealokasiId                    String                          @map("ealokasi_id") @db.Uuid
  jumlahDitebus                 Decimal                         @map("jumlah_ditebus")
  jenisPupuk                    JenisPupuk                      @relation(fields: [jenisPupukId], references: [jenisPupukId])
  ealokasi                      Ealokasi                        @relation(fields: [ealokasiId], references: [ealokasiId])
  ealokasiPupukSubsidiTransaksi EalokasiPupukSubsidiTransaksi[]

  @@map("ealokasi_pupuk_subsidi")
}

model EalokasiPupukSubsidiTransaksi {
  ealokasiPupukSubsidiId String               @map("ealokasi_pupuk_subsidi_id") @db.Uuid
  orderId                String               @map("order_id") @db.Uuid
  ealokasiPupukSubsidi   EalokasiPupukSubsidi @relation(fields: [ealokasiPupukSubsidiId], references: [ealokasiPupukSubsidiId])
  order                  Order                @relation(fields: [orderId], references: [orderId])

  @@id([ealokasiPupukSubsidiId, orderId])
  @@map("ealokasi_pupuk_subsidi_transaksi")
}

model FaqProdukKur {
  faqProdukKurId String     @id @default(uuid()) @map("faq_produk_kur_id") @db.Uuid
  question       String?
  answer         String?
  produkKurId    String?    @map("produk_kur_id") @db.Uuid
  produkKur      ProdukKur? @relation(fields: [produkKurId], references: [produkKurId])

  @@map("faq_produk_kur")
}

model FileKur {
  fileKurId           String            @id @default(uuid()) @map("file_kur_id") @db.Uuid
  namaFile            String            @map("nama_file")
  namaDokumen         String            @map("nama_dokumen")
  createdAt           DateTime          @map("created_at")
  updatedAt           DateTime          @map("updated_at")
  kreditUsahaRakyatId String            @map("kredit_usaha_rakyat_id") @db.Uuid
  fileKurSyaratId     String            @map("file_kur_syarat_id") @db.Uuid
  kreditUsahaRakyat   KreditUsahaRakyat @relation(fields: [kreditUsahaRakyatId], references: [kreditUsahaRakyatId])
  fileKurSyarat       FileKurSyarat     @relation(fields: [fileKurSyaratId], references: [fileKurSyaratId])

  @@map("file_kur")
}

model FileKurSyarat {
  fileKurSyaratId String    @id @default(uuid()) @map("file_kur_syarat_id") @db.Uuid
  namaFileSyarat  String    @map("nama_file_syarat")
  deskripsi       String
  verified        Boolean
  statusBank      Boolean   @map("status_bank")
  catatan         String?
  produkKurId     String    @map("produk_kur_id") @db.Uuid
  produkKur       ProdukKur @relation(fields: [produkKurId], references: [produkKurId])
  fileKur         FileKur[]

  @@map("file_kur_syarat")
}

model Gudang {
  gudangId       String               @id @default(uuid()) @map("gudang_id") @db.Uuid
  namaGudang     String               @map("nama_gudang")
  kapasitas      Int
  status         Boolean
  memberId       String?              @map("member_id") @db.Uuid
  jenisGudang    String?              @map("jenis_gudang")
  createdAt      DateTime             @map("created_at")
  updatedAt      DateTime             @map("updated_at")
  member         Member?              @relation(fields: [memberId], references: [memberId])
  alamatGudang   AlamatGudang[]
  materialStok   MaterialStok[]
  manajemenAwal  ManajemenInventory[] @relation("GudangAwal")
  manajemenAkhir ManajemenInventory[] @relation("GudangAkhir")

  @@map("gudang")
}

model HasilPanen {
  hasilPanenId       String           @id @default(uuid()) @map("hasil_panen_id") @db.Uuid
  namaHasil          String           @map("nama_hasil")
  pendapatanKotor    Decimal          @map("pendapatan_kotor")
  jumlah             Decimal
  satuanJumlah       String           @map("satuan_jumlah")
  rencanaUsahaTaniId String           @map("rencana_usaha_tani_id") @db.Uuid
  deskripsi          String?
  rencanaUsahaTani   RencanaUsahaTani @relation(fields: [rencanaUsahaTaniId], references: [rencanaUsahaTaniId])

  @@map("hasil_panen")
}

model JenisInventory {
  jenisInventoryId   String               @id @default(uuid()) @map("jenis_inventory_id") @db.Uuid
  namaJenisInventory String               @map("nama_jenis_inventory")
  manajemenInventory ManajemenInventory[]

  @@map("jenis_inventory")
}

model JenisPupuk {
  jenisPupukId         String                 @id @default(uuid()) @map("jenis_pupuk_id") @db.Uuid
  namaPupuk            String?                @map("nama_pupuk")
  deskripsi            String?
  biayaSaprotanPupuk   BiayaSaprotanPupuk[]
  ealokasiPupukSubsidi EalokasiPupukSubsidi[]

  @@map("jenis_pupuk")
}

model JenisTransaksi {
  jenisTransaksiId   String      @id @default(uuid()) @map("jenis_transaksi_id") @db.Uuid
  namaJenisTransaksi String?     @map("nama_jenis_transaksi")
  transaksi          Transaksi[]

  @@map("jenis_transaksi")
}

model Kabupaten {
  kabupatenId    String      @id @default(uuid()) @map("kabupaten_id") @db.Uuid
  kodeKemendagri String?     @map("kode_kemendagri")
  namaKabupaten  String?     @map("nama_kabupaten")
  provinsiId     String?     @map("provinsi_id") @db.Uuid
  provinsi       Provinsi?   @relation(fields: [provinsiId], references: [provinsiId])
  kecamatan      Kecamatan[]

  @@map("kabupaten")
}

model Kategori {
  kategoriId   String        @id @default(uuid()) @map("kategori_id") @db.Uuid
  komoditasId  String        @map("komoditas_id") @db.Uuid
  namaKategori String        @map("nama_kategori")
  deskripsi    String?
  status       Boolean
  komoditas    Komoditas     @relation(fields: [komoditasId], references: [komoditasId])
  subKategori  SubKategori[]

  @@map("kategori")
}

model Kecamatan {
  kecamatanId    String     @id @default(uuid()) @map("kecamatan_id") @db.Uuid
  kodeKemendagri String?    @map("kode_kemendagri")
  namaKecamatan  String?    @map("nama_kecamatan")
  kabupatenId    String?    @map("kabupaten_id") @db.Uuid
  kabupaten      Kabupaten? @relation(fields: [kabupatenId], references: [kabupatenId])
  desa           Desa[]

  @@map("kecamatan")
}

model KegiatanPenyuluhan {
  kegiatanPenyuluhanId       String                   @id @default(uuid()) @map("kegiatan_penyuluhan_id") @db.Uuid
  penyuluhId                 String                   @map("penyuluh_id") @db.Uuid
  kelompokTaniId             String                   @map("kelompok_tani_id") @db.Uuid
  tanggal                    DateTime
  waktuMulai                 DateTime                 @map("waktu_mulai")
  waktuSelesai               DateTime                 @map("waktu_selesai")
  lokasi                     String
  topik                      String
  metodePenyuluhanId         String                   @map("metode_penyuluhan_id") @db.Uuid
  jumlahPeserta              Int                      @map("jumlah_peserta")
  hasil                      String?
  tindakLanjut               String?                  @map("tindak_lanjut")
  createdAt                  DateTime                 @map("created_at")
  updatedAt                  DateTime                 @map("updated_at")
  statusKegiatanPenyuluhanId String                   @map("status_kegiatan_penyuluhan_id") @db.Uuid
  penyuluh                   Penyuluh                 @relation(fields: [penyuluhId], references: [penyuluhId])
  kelompokTani               KelompokTani             @relation(fields: [kelompokTaniId], references: [kelompokTaniId])
  metodePenyuluhan           MetodePenyuluhan         @relation(fields: [metodePenyuluhanId], references: [metodePenyuluhanId])
  statusKegiatanPenyuluhan   StatusKegiatanPenyuluhan @relation(fields: [statusKegiatanPenyuluhanId], references: [statusKegiatanPenyuluhanId])
  materiKegiatan             MateriKegiatan[]

  @@map("kegiatan_penyuluhan")
}

model KelompokTani {
  kelompokTaniId        String                  @id @default(uuid()) @map("kelompok_tani_id") @db.Uuid
  namaKelompok          String                  @map("nama_kelompok")
  namaKetuaKelompok     String                  @map("nama_ketua_kelompok")
  luasLahanKelompok     Decimal?                @map("luas_lahan_kelompok")
  jumlahAnggota         Int                     @default(0) @map("jumlah_anggota")
  satuanLuasLahan       String?                 @default("Ha") @map("satuan_luas_lahan")
  tanggalBerdiri        DateTime                @map("tanggal_berdiri")
  deskripsi             String?
  createdAt             DateTime                @map("created_at")
  updatedAt             DateTime                @map("updated_at")
  deletedAt             DateTime?               @map("deleted_at")
  Ealokasi              Ealokasi[]
  KegiatanPenyuluhan    KegiatanPenyuluhan[]
  PetaniKelompokTani    PetaniKelompokTani[]
  AlamatKelompokTani    AlamatKelompokTani[]
  KelompokTaniKomoditas KelompokTaniKomoditas[]

  @@map("kelompok_tani")
}

model KelompokTaniKomoditas {
  komoditasId    String       @map("komoditas_id") @db.Uuid
  kelompokTaniId String       @map("kelompok_tani_id") @db.Uuid
  Komoditas      Komoditas    @relation(fields: [komoditasId], references: [komoditasId])
  KelompokTani   KelompokTani @relation(fields: [kelompokTaniId], references: [kelompokTaniId])

  @@id([komoditasId, kelompokTaniId])
  @@map("kelompok_tani_komoditas")
}

model Keranjang {
  keranjangId        String            @id @default(uuid()) @map("keranjang_id") @db.Uuid
  penyediaMaterialId String            @map("penyedia_material_id") @db.Uuid
  memberId           String            @map("member_id") @db.Uuid
  jumlah             Int
  createdAt          DateTime          @map("created_at")
  updatedAt          DateTime          @map("updated_at")
  roleId             String            @map("role_id") @db.Uuid
  PenyediaMaterial   PenyediaMaterial? @relation(fields: [penyediaMaterialId], references: [penyediaMaterialId])
  Role               Role?             @relation(fields: [roleId], references: [roleId])

  @@map("keranjang")
}

model Komoditas {
  komoditasId               String                      @id @default(uuid()) @map("komoditas_id") @db.Uuid
  subsektorId               String                      @map("subsektor_id") @db.Uuid
  namaKomoditas             String                      @map("nama_komoditas")
  deskripsi                 String?
  status                    Boolean
  Ealokasi                  Ealokasi[]
  Kategori                  Kategori[]
  RencanaUsahaTaniKomoditas RencanaUsahaTaniKomoditas[]
  Subsektor                 Subsektor?                  @relation(fields: [subsektorId], references: [subsektorId])
  KelompokTaniKomoditas     KelompokTaniKomoditas[]

  @@map("komoditas")
}

model Koordinat {
  koordinatId String  @id @default(uuid()) @map("koordinat_id") @db.Uuid
  lat         String?
  lng         String?
  alamatId    String? @map("alamat_id") @db.Uuid
  Alamat      Alamat? @relation(fields: [alamatId], references: [alamatId])

  @@map("koordinat")
}

model KreditUsahaRakyat {
  kreditUsahaRakyatId String     @id @default(uuid()) @map("kredit_usaha_rakyat_id") @db.Uuid
  keperluanKur        String     @map("keperluan_kur")
  namaPasangan        String     @map("nama_pasangan")
  jumlah              Decimal
  jangkaWaktu         Int        @map("jangka_waktu")
  deskripsi           String?
  produkKurId         String     @map("produk_kur_id") @db.Uuid
  memberId            String     @map("member_id") @db.Uuid
  lamaUsaha           String?    @map("lama_usaha")
  createdAt           DateTime   @map("created_at")
  updatedAt           DateTime   @map("updated_at")
  roleId              String?    @map("role_id") @db.Uuid
  FileKur             FileKur[]
  ProdukKur           ProdukKur? @relation(fields: [produkKurId], references: [produkKurId])
  Role                Role?      @relation(fields: [roleId], references: [roleId])

  @@map("kredit_usaha_rakyat")
}

model Ktp {
  ktpId         String          @id @default(uuid()) @map("ktp_id") @db.Uuid
  nik           String
  nama          String
  alamat        String
  jenisKelamin  JenisKelamin    @map("jenis_kelamin")
  tempatLahir   String          @map("tempat_lahir")
  tanggalLahir  DateTime        @map("tanggal_lahir")
  verified      Boolean
  createdAt     DateTime        @map("created_at")
  updatedAt     DateTime        @map("updated_at")
  pekerjaan     String?
  KtpKonfirmasi KtpKonfirmasi[]
  Member        Member[]

  @@map("ktp")
}

model KtpKonfirmasi {
  ktpKonfirmasiId String    @id @default(uuid()) @map("ktp_konfirmasi_id") @db.Uuid
  ktpId           String    @map("ktp_id") @db.Uuid
  konfirmasi      Boolean?
  alasan          String?
  createdAt       DateTime? @map("created_at")
  updatedAt       DateTime? @map("updated_at")
  ktp             Ktp       @relation(fields: [ktpId], references: [ktpId])

  @@map("ktp_konfirmasi")
}

model KurHistory {
  kurHistoryId        String     @id @default(uuid()) @map("kur_history_id") @db.Uuid
  kreditUsahaRakyatId String     @map("kredit_usaha_rakyat_id") @db.Uuid
  statusKurId         String     @map("status_kur_id") @db.Uuid
  deskripsi           String?
  createdAt           DateTime   @map("created_at")
  updatedAt           DateTime   @map("updated_at")
  StatusKur           StatusKur? @relation(fields: [statusKurId], references: [statusKurId])

  @@map("kur_history")
}

model LahanUsaha {
  lahanUsahaId      String  @id @default(uuid()) @map("lahan_usaha_id") @db.Uuid
  luas              Decimal
  satuanLuas        String  @default("Ha") @map("satuan_luas")
  alamatId          String  @map("alamat_id") @db.Uuid
  statusKepemilikan String  @map("status_kepemilikan")
  Alamat            Alamat  @relation(fields: [alamatId], references: [alamatId])

  @@map("lahan_usaha")
}

model Layanan {
  layananId   String        @id @default(uuid()) @map("layanan_id") @db.Uuid
  namaLayanan String?       @map("nama_layanan")
  keterangan  String?
  icon        String?
  url         String?
  RoleLayanan RoleLayanan[]
  SubLayanan  SubLayanan[]

  @@map("layanan")
}

model LimitTransaksi {
  limitTransaksiId String   @id @default(uuid()) @map("limit_transaksi_id") @db.Uuid
  limitHarian      Decimal? @default(0) @map("limit_harian")
  limitBulanan     Decimal? @default(0) @map("limit_bulanan")
  walletId         String?  @map("wallet_id") @db.Uuid
  Wallet           Wallet?  @relation(fields: [walletId], references: [walletId])

  @@map("limit_transaksi")
}

model ManajemenInventory {
  manajemenInventoryId String          @id @default(uuid()) @map("manajemen_inventory_id") @db.Uuid
  nomorDokumen         String?         @map("nomor_dokumen")
  referensiDokumen     String?         @map("referensi_dokumen")
  gudangIdAwal         String          @map("gudang_id_awal") @db.Uuid
  gudangIdAkhir        String          @map("gudang_id_akhir") @db.Uuid
  materialMasterId     String          @map("material_master_id") @db.Uuid
  jumlah               BigInt
  tanggal              DateTime
  serialNumberId       String          @map("serial_number_id") @db.Uuid
  jenisInventoryId     String?         @map("jenis_inventory_id") @db.Uuid
  createdAt            DateTime        @map("created_at")
  updatedAt            DateTime        @map("updated_at")
  GudangAwal           Gudang?         @relation("GudangAwal", fields: [gudangIdAwal], references: [gudangId])
  GudangAkhir          Gudang?         @relation("GudangAkhir", fields: [gudangIdAkhir], references: [gudangId])
  JenisInventory       JenisInventory? @relation(fields: [jenisInventoryId], references: [jenisInventoryId])
  SerialNumber         SerialNumber?   @relation(fields: [serialNumberId], references: [serialNumberId])
  MaterialMaster       MaterialMaster  @relation(fields: [materialMasterId], references: [materialMasterId])

  @@map("manajemen_inventory")
}

model MasaTanam {
  masaTanamId      String             @id @default(uuid()) @map("masa_tanam_id") @db.Uuid
  nama             Int
  Ealokasi         Ealokasi[]
  RencanaUsahaTani RencanaUsahaTani[]

  @@map("masa_tanam")
}

model MasterPenyedia {
  masterPenyediaId           String                       @id @default(uuid()) @map("master_penyedia_id") @db.Uuid
  penyediaLevelId            String                       @map("penyedia_level_id") @db.Uuid
  kodeUsaha                  String?                      @map("kode_usaha")
  namaPenyedia               String                       @map("nama_penyedia")
  alamatWeb                  String?                      @map("alamat_web")
  noKontak                   String?                      @map("no_kontak")
  emailPenyedia              String?                      @map("email_penyedia")
  icon                       String
  status                     Boolean
  verifikasiAdmin            Boolean                      @map("verifikasi_admin")
  createdAt                  DateTime                     @map("created_at")
  updatedAt                  DateTime                     @map("updated_at")
  deletedAt                  DateTime?                    @map("deleted_at")
  memberId                   String?                      @map("member_id") @db.Uuid
  Ealokasi                   Ealokasi[]
  PenyediaLevel              PenyediaLevel?               @relation(fields: [penyediaLevelId], references: [penyediaLevelId])
  PenyediaMaterial           PenyediaMaterial[]
  AlamatPenyedia             AlamatPenyedia[]
  MasterPenyediaRekeningBank MasterPenyediaRekeningBank[]
  MasterPenyediaWallet       MasterPenyediaWallet[]

  @@map("master_penyedia")
}

model MasterPenyediaRekeningBank {
  masterPenyediaId String         @map("master_penyedia_id") @db.Uuid
  rekeningBankId   String         @map("rekening_bank_id") @db.Uuid
  RekeningBank     RekeningBank?  @relation(fields: [rekeningBankId], references: [rekeningBankId])
  masterPenyedia   MasterPenyedia @relation(fields: [masterPenyediaId], references: [masterPenyediaId])

  @@id([masterPenyediaId, rekeningBankId])
  @@map("master_penyedia_rekening_bank")
}

model MasterPenyediaWallet {
  masterPenyediaId String         @map("master_penyedia_id") @db.Uuid
  walletId         String         @map("wallet_id") @db.Uuid
  Wallet           Wallet?        @relation(fields: [walletId], references: [walletId])
  masterPenyedia   MasterPenyedia @relation(fields: [masterPenyediaId], references: [masterPenyediaId])

  @@id([masterPenyediaId, walletId])
  @@map("master_penyedia_wallet")
}

model MataUang {
  mataUangId   String         @id @default(uuid()) @map("mata_uang_id") @db.Uuid
  namaMataUang String?        @map("nama_mata_uang")
  RekeningBank RekeningBank[]

  @@map("mata_uang")
}

model MateriKegiatan {
  materiKegiatanId     String              @id @default(uuid()) @map("materi_kegiatan_id") @db.Uuid
  namaFile             String              @map("nama_file")
  kegiatanPenyuluhanId String              @map("kegiatan_penyuluhan_id") @db.Uuid
  KegiatanPenyuluhan   KegiatanPenyuluhan? @relation(fields: [kegiatanPenyuluhanId], references: [kegiatanPenyuluhanId])

  @@map("materi_kegiatan")
}

model MaterialMaster {
  materialMasterId      String                  @id @default(uuid()) @map("material_master_id") @db.Uuid
  childKategoriId       String                  @map("child_kategori_id") @db.Uuid
  kodeMaterial          String                  @map("kode_material")
  namaMaterial          String                  @map("nama_material")
  deskripsi             String?
  unitOfMeasure         String                  @map("unit_of_measure")
  hargaStandar          Decimal                 @map("harga_standar")
  minimumStok           Int?                    @default(0) @map("minimum_stok")
  maksimumStok          Int?                    @default(0) @map("maksimum_stok")
  leadTime              Int?                    @default(0) @map("lead_time")
  gambarUrl             String?                 @map("gambar_url")
  status                Boolean
  createdAt             DateTime                @map("created_at")
  updatedAt             DateTime                @map("updated_at")
  subsidi               Boolean                 @default(false)
  ChildKategori         ChildKategori?          @relation(fields: [childKategoriId], references: [childKategoriId])
  DimensiMaterialMaster DimensiMaterialMaster[]
  PenyediaMaterial      PenyediaMaterial[]
  SerialNumber          SerialNumber[]
  ManajemenInventory    ManajemenInventory[]

  @@map("material_master")
}

model MaterialStok {
  materialStokId   String   @id @default(uuid()) @map("material_stok_id") @db.Uuid
  gudangId         String   @map("gudang_id") @db.Uuid
  materialMasterId String   @map("material_master_id") @db.Uuid
  jumlahStok       BigInt   @map("jumlah_stok")
  createdAt        DateTime @map("created_at")
  updatedAt        DateTime @map("updated_at")
  Gudang           Gudang?  @relation(fields: [gudangId], references: [gudangId])

  @@map("material_stok")
}

model Member {
  memberId       String         @id @default(uuid()) @map("member_id") @db.Uuid
  ktpId          String?        @map("ktp_id") @db.Uuid
  statusMemberId String?        @map("status_member_id") @db.Uuid
  email          String?
  nomorHp        String?        @map("nomor_hp")
  nomorWa        String?        @map("nomor_wa")
  avatar         String?        @default("default.png")
  createdAt      DateTime?      @map("created_at")
  updatedAt      DateTime?      @map("updated_at")
  deletedAt      DateTime?      @map("deleted_at")
  Gudang         Gudang[]
  Penyuluh       Penyuluh[]
  Petani         Petani[]
  RekeningBank   RekeningBank[]
  RoleMember     RoleMember[]
  Ktp            Ktp?           @relation(fields: [ktpId], references: [ktpId])
  StatusMember   StatusMember?  @relation(fields: [statusMemberId], references: [statusMemberId])
  Userlogin      Userlogin[]
  Wallet         Wallet[]
  Whitelist      Whitelist[]
  AlamatMember   AlamatMember[]
  Order          Order[]
  Notifikasi     Notifikasi[]

  @@map("member")
}

model MetodePenyuluhan {
  metodePenyuluhanId String               @id @default(uuid()) @map("metode_penyuluhan_id") @db.Uuid
  metode             String
  KegiatanPenyuluhan KegiatanPenyuluhan[]

  @@map("metode_penyuluhan")
}

model Notifikasi {
  notifikasiId     String              @id @default(uuid()) @map("notifikasi_id") @db.Uuid
  notifikasiGrupId String              @map("notifikasi_grup_id") @db.Uuid
  memberId         String              @map("member_id") @db.Uuid
  jenisLayanan     String              @map("jenis_layanan")
  judul            String
  pesan            String
  waktuKirim       DateTime            @map("waktu_kirim")
  statusNotifikasi StatusNotifikasi    @map("status_notifikasi")
  prioritas        PrioritasNotifikasi
  dataTambahan     Json?               @map("data_tambahan")
  linkAksi         String?             @map("link_aksi")
  createdAt        DateTime            @map("created_at")
  updatedAt        DateTime            @map("updated_at")
  deletedAt        DateTime?           @map("deleted_at")
  Member           Member              @relation(fields: [memberId], references: [memberId])
  NotifikasiGrup   NotifikasiGrup?     @relation(fields: [notifikasiGrupId], references: [notifikasiGrupId])

  @@map("notifikasi")
}

model NotifikasiGrup {
  notifikasiGrupId   String       @id @default(uuid()) @map("notifikasi_grup_id") @db.Uuid
  namaNotifikasiGrup String       @map("nama_notifikasi_grup")
  deskripsi          String?
  Notifikasi         Notifikasi[]

  @@map("notifikasi_grup")
}

model Order {
  orderId                       String                          @id @default(uuid()) @map("order_id") @db.Uuid
  memberId                      String                          @map("member_id") @db.Uuid
  kodeInvoice                   String                          @map("kode_invoice")
  grandTotal                    Decimal                         @default(0) @map("grand_total")
  totalBiayaKirim               Decimal                         @default(0) @map("total_biaya_kirim")
  totalBiayaTambahan            Decimal                         @default(0) @map("total_biaya_tambahan")
  totalKupon                    Decimal                         @default(0) @map("total_kupon")
  deskripsi                     String?
  createdAt                     DateTime                        @map("created_at")
  updatedAt                     DateTime                        @map("updated_at")
  roleId                        String?                         @map("role_id") @db.Uuid
  Role                          Role?                           @relation(fields: [roleId], references: [roleId])
  Member                        Member                          @relation(fields: [memberId], references: [memberId])
  EalokasiPupukSubsidiTransaksi EalokasiPupukSubsidiTransaksi[]
  OrderPembayaran               OrderPembayaran[]
  OrderPengiriman               OrderPengiriman[]
  OrderStatusPivot              OrderStatusPivot[]
  OrderBiayaTambahan            OrderBiayaTambahan[]

  @@map("order")
}

model OrderBiayaTambahan {
  orderBiayaTambahanId String     @id @default(uuid()) @map("order_biaya_tambahan_id") @db.Uuid
  orderId              String     @map("order_id") @db.Uuid
  namaBiaya            String     @map("nama_biaya")
  jenisBiaya           JenisBiaya @map("jenis_biaya")
  nominal              Decimal
  Order                Order      @relation(fields: [orderId], references: [orderId])

  @@map("order_biaya_tambahan")
}

model OrderMaterialMaterial {
  orderMaterialMasterId String            @id @default(uuid()) @map("order_material_master_id") @db.Uuid
  jumlah                Int
  harga                 Decimal
  catatan               String?
  penyediaMaterialId    String            @map("penyedia_material_id") @db.Uuid
  createdAt             DateTime          @map("created_at")
  updatedAt             DateTime          @map("updated_at")
  orderId               String            @map("order_id") @db.Uuid
  PenyediaMaterial      PenyediaMaterial? @relation(fields: [penyediaMaterialId], references: [penyediaMaterialId])

  @@map("order_material_material")
}

model OrderPembayaran {
  orderPembayaranId String   @id @default(uuid()) @map("order_pembayaran_id") @db.Uuid
  status            Boolean
  metodePembayaran  String   @map("metode_pembayaran")
  deskripsi         String?
  createdAt         DateTime @map("created_at")
  orderId           String   @map("order_id") @db.Uuid
  order             Order    @relation(fields: [orderId], references: [orderId])

  @@map("order_pembayaran")
}

model OrderPengiriman {
  orderPengirimanId String                  @id @default(uuid()) @map("order_pengiriman_id") @db.Uuid
  noResi            String?                 @map("no_resi")
  kurir             String?
  biayaKirim        Decimal                 @map("biaya_kirim")
  alamatId          String                  @map("alamat_id") @db.Uuid
  orderId           String                  @map("order_id") @db.Uuid
  alamat            Alamat                  @relation(fields: [alamatId], references: [alamatId])
  order             Order                   @relation(fields: [orderId], references: [orderId])
  details           OrderPengirimanDetail[]

  @@map("order_pengiriman")
}

model OrderPengirimanDetail {
  orderPengirimanDetailId String          @id @default(uuid()) @map("order_pengiriman_detail_id") @db.Uuid
  tanggal                 DateTime
  judul                   String
  pesan                   String
  orderPengirimanId       String          @map("order_pengiriman_id") @db.Uuid
  orderPengiriman         OrderPengiriman @relation(fields: [orderPengirimanId], references: [orderPengirimanId])

  @@map("order_pengiriman_detail")
}

model OrderStatus {
  orderStatusId String             @id @default(uuid()) @map("order_status_id") @db.Uuid
  namaStatus    String             @map("nama_status")
  deskripsi     String?
  createdAt     DateTime           @map("created_at")
  orderStatus   OrderStatusPivot[]

  @@map("order_status")
}

model OrderStatusPivot {
  orderStatusPivotId String      @id @default(uuid()) @map("order_status_pivot_id") @db.Uuid
  orderStatusId      String      @map("order_status_id") @db.Uuid
  orderId            String      @map("order_id") @db.Uuid
  createdAt          DateTime    @map("created_at")
  orderStatus        OrderStatus @relation(fields: [orderStatusId], references: [orderStatusId])
  order              Order       @relation(fields: [orderId], references: [orderId])

  @@map("order_status_pivot")
}

model PenyediaLevel {
  penyediaLevelId   String           @id @default(uuid()) @map("penyedia_level_id") @db.Uuid
  namaPenyediaLevel String           @map("nama_penyedia_level")
  status            Boolean?
  createdAt         DateTime         @map("created_at")
  deletedAt         DateTime?        @map("deleted_at")
  deskripsi         String?
  masterPenyedia    MasterPenyedia[]

  @@map("penyedia_level")
}

model PenyediaMaterial {
  penyediaMaterialId String                  @id @default(uuid()) @map("penyedia_material_id") @db.Uuid
  materialMasterId   String                  @map("material_master_id") @db.Uuid
  masterPenyediaId   String                  @map("master_penyedia_id") @db.Uuid
  createdAt          DateTime                @map("created_at")
  updatedAt          DateTime                @map("updated_at")
  materialMaster     MaterialMaster          @relation(fields: [materialMasterId], references: [materialMasterId])
  masterPenyedia     MasterPenyedia          @relation(fields: [masterPenyediaId], references: [masterPenyediaId])
  harga              PenyediaMaterialHarga[]
  keranjang          Keranjang[]
  orderMaterial      OrderMaterialMaterial[]
  Whitelist          Whitelist[]

  @@map("penyedia_material")
}

model PenyediaMaterialHarga {
  penyediaMaterialHargaId String                         @id @default(uuid()) @map("penyedia_material_harga_id") @db.Uuid
  penyediaMaterialId      String                         @map("penyedia_material_id") @db.Uuid
  harga                   Decimal
  createdAt               DateTime                       @map("created_at")
  updatedAt               DateTime                       @map("updated_at")
  penyediaMaterial        PenyediaMaterial               @relation(fields: [penyediaMaterialId], references: [penyediaMaterialId])
  riwayatHarga            PenyediaMaterialRiwayatHarga[]

  @@map("penyedia_material_harga")
}

model PenyediaMaterialRiwayatHarga {
  penyediaMaterialRiwayatHargaId String                @id @default(uuid()) @map("penyedia_material_riwayat_harga_id") @db.Uuid
  penyediaMaterialHargaId        String                @map("penyedia_material_harga_id") @db.Uuid
  harga                          Decimal
  createdAt                      DateTime              @map("created_at")
  updatedAt                      DateTime              @map("updated_at")
  penyediaMaterialHarga          PenyediaMaterialHarga @relation(fields: [penyediaMaterialHargaId], references: [penyediaMaterialHargaId])

  @@map("penyedia_material_riwayat_harga")
}

model Penyuluh {
  penyuluhId         String               @id @default(uuid()) @map("penyuluh_id") @db.Uuid
  memberId           String               @map("member_id") @db.Uuid
  nip                String?
  jabatan            String?
  pendidikanTerakhir String?              @map("pendidikan_terakhir")
  bidangKeahlian     String               @map("bidang_keahlian")
  tahunBertugas      String               @map("tahun_bertugas")
  status             Boolean
  bppId              String               @map("bpp_id") @db.Uuid
  createdAt          DateTime             @map("created_at")
  updatedAt          DateTime             @map("updated_at")
  member             Member               @relation(fields: [memberId], references: [memberId])
  bpp                Bpp                  @relation(fields: [bppId], references: [bppId])
  kegiatanPenyuluhan KegiatanPenyuluhan[]
  ealokasi           Ealokasi[]

  @@map("penyuluh")
}

model Petani {
  petaniId         String               @id @default(uuid()) @map("petani_id") @db.Uuid
  memberId         String               @map("member_id") @db.Uuid
  nomorKartuTani   String?              @map("nomor_kartu_tani")
  jenisPetani      JenisPetani          @map("jenis_petani")
  statusPetani     StatusPetani         @map("status_petani")
  createdAt        DateTime             @map("created_at")
  updatedAt        DateTime             @map("updated_at")
  member           Member               @relation(fields: [memberId], references: [memberId])
  kelompokTani     PetaniKelompokTani[]
  ealokasi         Ealokasi[]
  rencanaUsahaTani RencanaUsahaTani[]

  @@map("petani")
}

model PetaniKelompokTani {
  kelompokTaniId String       @map("kelompok_tani_id") @db.Uuid
  petaniId       String       @map("petani_id") @db.Uuid
  tanggalMasuk   DateTime     @map("tanggal_masuk")
  ketua          Boolean      @default(false)
  kelompokTani   KelompokTani @relation(fields: [kelompokTaniId], references: [kelompokTaniId])
  petani         Petani       @relation(fields: [petaniId], references: [petaniId])

  @@id([kelompokTaniId, petaniId])
  @@map("petani_kelompok_tani")
}

model ProdukKur {
  produkKurId       String              @id @default(uuid()) @map("produk_kur_id") @db.Uuid
  namaProduk        String              @map("nama_produk")
  bankId            String?             @map("bank_id") @db.Uuid
  deskripsi         String?
  tujuan            String?
  sasaran           String?
  kontak            String?
  alamatWeb         String?             @map("alamat_web")
  createdAt         DateTime            @map("created_at")
  updatedAt         DateTime            @map("updated_at")
  bank              Bank?               @relation(fields: [bankId], references: [bankId])
  faq               FaqProdukKur[]
  fileKurSyarat     FileKurSyarat[]
  kreditUsahaRakyat KreditUsahaRakyat[]

  @@map("produk_kur")
}

model Provinsi {
  provinsiId     String      @id @default(uuid()) @map("provinsi_id") @db.Uuid
  kodeKemendagri String?     @map("kode_kemendagri")
  namaProvinsi   String      @map("nama_provinsi")
  kabupaten      Kabupaten[]

  @@map("provinsi")
}

model RekeningBank {
  rekeningBankId String                       @id @default(uuid()) @map("rekening_bank_id") @db.Uuid
  nomorRekening  String                       @map("nomor_rekening")
  namaPemilik    String                       @map("nama_pemilik")
  cabang         String?
  createdAt      DateTime                     @map("created_at")
  updatedAt      DateTime                     @map("updated_at")
  bankId         String?                      @map("bank_id") @db.Uuid
  mataUangId     String?                      @map("mata_uang_id") @db.Uuid
  memberId       String?                      @map("member_id") @db.Uuid
  deletedAt      DateTime?                    @map("deleted_at")
  bank           Bank?                        @relation(fields: [bankId], references: [bankId])
  mataUang       MataUang?                    @relation(fields: [mataUangId], references: [mataUangId])
  member         Member?                      @relation(fields: [memberId], references: [memberId])
  deposit        Deposit[]
  masterPenyedia MasterPenyediaRekeningBank[]
  withdraw       Withdraw[]

  @@map("rekening_bank")
}

model RencanaUsahaTani {
  rencanaUsahaTaniId       String                      @id @default(uuid()) @map("rencana_usaha_tani_id") @db.Uuid
  tahun                    String
  masaTanamId              String                      @map("masa_tanam_id") @db.Uuid
  totalPerkiraanBiaya      Decimal                     @map("total_perkiraan_biaya")
  totalPerkiraanPendapatan Decimal                     @map("total_perkiraan_pendapatan")
  waktuTanam               DateTime                    @map("waktu_tanam")
  createdAt                DateTime                    @map("created_at")
  updatedAt                DateTime                    @map("updated_at")
  petaniId                 String                      @map("petani_id") @db.Uuid
  masaTanam                MasaTanam                   @relation(fields: [masaTanamId], references: [masaTanamId])
  petani                   Petani                      @relation(fields: [petaniId], references: [petaniId])
  biayaSaprotanPupuk       BiayaSaprotanPupuk[]
  biayaUsahaTani           BiayaUsahaTani[]
  hasilPanen               HasilPanen[]
  komoditas                RencanaUsahaTaniKomoditas[]

  @@map("rencana_usaha_tani")
}

model RencanaUsahaTaniKomoditas {
  komoditasId        String           @map("komoditas_id") @db.Uuid
  rencanaUsahaTaniId String           @map("rencana_usaha_tani_id") @db.Uuid
  komoditas          Komoditas        @relation(fields: [komoditasId], references: [komoditasId])
  rencanaUsahaTani   RencanaUsahaTani @relation(fields: [rencanaUsahaTaniId], references: [rencanaUsahaTaniId])

  @@id([komoditasId, rencanaUsahaTaniId])
  @@map("rencana_usaha_tani_komoditas")
}

model Role {
  roleId            String              @id @default(uuid()) @map("role_id") @db.Uuid
  namaRole          String              @map("nama_role")
  keterangan        String?
  aktif             Boolean?
  statusRole        StatusRole          @map("status_role")
  layanan           RoleLayanan[]
  member            RoleMember[]
  keranjang         Keranjang[]
  kreditUsahaRakyat KreditUsahaRakyat[]
  order             Order[]
  Whitelist         Whitelist[]

  @@map("role")
}

model RoleLayanan {
  roleId    String  @map("role_id") @db.Uuid
  layananId String  @map("layanan_id") @db.Uuid
  role      Role    @relation(fields: [roleId], references: [roleId])
  layanan   Layanan @relation(fields: [layananId], references: [layananId])

  @@id([roleId, layananId])
  @@map("role_layanan")
}

model RoleMember {
  roleId   String  @map("role_id") @db.Uuid
  memberId String  @map("member_id") @db.Uuid
  confirm  Boolean @default(false) @map("confirm") @db.Boolean
  role     Role    @relation(fields: [roleId], references: [roleId])
  member   Member  @relation(fields: [memberId], references: [memberId])

  @@id([roleId, memberId])
  @@map("role_member")
}

model Sektor {
  sektorId   String      @id @default(uuid()) @map("sektor_id") @db.Uuid
  namaSektor String      @map("nama_sektor")
  deskripsi  String?
  status     Boolean
  subsektor  Subsektor[]

  @@map("sektor")
}

model SerialNumber {
  serialNumberId     String               @id @default(uuid()) @map("serial_number_id") @db.Uuid
  serialNumber       String               @map("serial_number")
  createdAt          DateTime             @map("created_at")
  updatedAt          DateTime             @map("updated_at")
  materialMasterId   String               @map("material_master_id") @db.Uuid
  materialMaster     MaterialMaster       @relation(fields: [materialMasterId], references: [materialMasterId])
  manajemenInventory ManajemenInventory[]

  @@map("serial_number")
}

model StatusKegiatanPenyuluhan {
  statusKegiatanPenyuluhanId String               @id @default(uuid()) @map("status_kegiatan_penyuluhan_id") @db.Uuid
  namaStatus                 String               @map("nama_status")
  kegiatanPenyuluhan         KegiatanPenyuluhan[]

  @@map("status_kegiatan_penyuluhan")
}

model StatusKur {
  statusKurId String       @id @default(uuid()) @map("status_kur_id") @db.Uuid
  namaStatus  String       @map("nama_status")
  deskripsi   String?
  aktif       Boolean
  kurHistory  KurHistory[]

  @@map("status_kur")
}

model StatusMember {
  statusMemberId String   @id @default(uuid()) @map("status_member_id") @db.Uuid
  namaStatus     String?  @map("nama_status")
  members        Member[]

  @@map("status_member")
}

model StatusWallet {
  statusWalletId   String   @id @default(uuid()) @map("status_wallet_id") @db.Uuid
  namaStatusWallet String?  @map("nama_status_wallet")
  wallet           Wallet[]

  @@map("status_wallet")
}

model SubKategori {
  subKategoriId   String          @id @default(uuid()) @map("sub_kategori_id") @db.Uuid
  kategoriId      String          @map("kategori_id") @db.Uuid
  namaSubkategori String          @map("nama_subkategori")
  deskripsi       String?
  status          Boolean
  kategori        Kategori        @relation(fields: [kategoriId], references: [kategoriId])
  childKategoris  ChildKategori[]

  @@map("sub_kategori")
}

model SubLayanan {
  subLayananId   String         @id @default(uuid()) @map("sub_layanan_id") @db.Uuid
  namaSubLayanan String?        @map("nama_sub_layanan")
  keterangan     String?
  icon           String?
  url            String?
  layananId      String?        @map("layanan_id") @db.Uuid
  layanan        Layanan?       @relation(fields: [layananId], references: [layananId])
  childLayanan   ChildLayanan[]

  @@map("sub_layanan")
}

model Subsektor {
  subsektorId   String      @id @default(uuid()) @map("subsektor_id") @db.Uuid
  sektorId      String?     @map("sektor_id") @db.Uuid
  namaSubsektor String?     @map("nama_subsektor")
  deskripsi     String?
  status        Boolean?
  sektor        Sektor?     @relation(fields: [sektorId], references: [sektorId])
  komoditas     Komoditas[]

  @@map("subsektor")
}

model Transaksi {
  transaksiId      String          @id @default(uuid()) @map("transaksi_id") @db.Uuid
  walletId         String?         @map("wallet_id") @db.Uuid
  jenisTransaksiId String?         @map("jenis_transaksi_id") @db.Uuid
  jumlah           Float?
  saldoSebelum     Float?          @map("saldo_sebelum")
  saldoSesudah     Float?          @map("saldo_sesudah")
  waktuTransaksi   DateTime?       @map("waktu _transaksi")
  keterangan       String?
  wallet           Wallet?         @relation(fields: [walletId], references: [walletId])
  jenisTransaksi   JenisTransaksi? @relation(fields: [jenisTransaksiId], references: [jenisTransaksiId])
  deposits         Deposit[]
  withdraws        Withdraw[]

  @@map("transaksi")
}

model Userlogin {
  userloginId       String    @id @default(uuid()) @map("userlogin_id") @db.Uuid
  memberId          String?   @map("member_id") @db.Uuid
  provider          Provider?
  providerAccountId String?   @map("provider_account_id")
  username          String?
  password          String?
  accessToken       String?   @map("access_token")
  refreshToken      String?   @map("refresh_token")
  lastLogin         DateTime? @map("last_login")
  member            Member?   @relation(fields: [memberId], references: [memberId])

  @@map("userlogin")
}

model Wallet {
  walletId              String                 @id @default(uuid()) @map("wallet_id") @db.Uuid
  saldo                 Float                  @default(0)
  statusWalletId        String?                @map("status_wallet_id") @db.Uuid
  createdAt             DateTime?              @map("created_at")
  updatedAt             DateTime?              @map("updated_at")
  memberId              String?                @map("member_id") @db.Uuid
  statusWallet          StatusWallet?          @relation(fields: [statusWalletId], references: [statusWalletId])
  member                Member?                @relation(fields: [memberId], references: [memberId])
  deposits              Deposit[]
  limitTransaksis       LimitTransaksi[]
  masterPenyediaWallets MasterPenyediaWallet[]
  transaksis            Transaksi[]
  withdraws             Withdraw[]

  @@map("wallet")
}

model Whitelist {
  whitelistId        String           @id @default(uuid()) @map("whitelist_id") @db.Uuid
  penyediaMaterialId String           @map("penyedia_material_id") @db.Uuid
  memberId           String           @map("member_id") @db.Uuid
  createdAt          DateTime         @map("created_at")
  updatedAt          DateTime         @map("updated_at")
  roleId             String           @map("role_id") @db.Uuid
  penyediaMaterial   PenyediaMaterial @relation(fields: [penyediaMaterialId], references: [penyediaMaterialId])
  member             Member           @relation(fields: [memberId], references: [memberId])
  role               Role             @relation(fields: [roleId], references: [roleId])

  @@map("whitelist")
}

model Withdraw {
  withdrawId      String           @id @default(uuid()) @map("withdraw_id") @db.Uuid
  transaksiId     String?          @map("transaksi_id") @db.Uuid
  walletId        String?          @map("wallet_id") @db.Uuid
  statusPencairan StatusPencairan?
  createdAt       DateTime?        @map("created_at")
  updatedAt       DateTime?        @map("updated_at")
  rekeningBankId  String?          @map("rekening_bank_id") @db.Uuid
  transaksi       Transaksi?       @relation(fields: [transaksiId], references: [transaksiId])
  wallet          Wallet?          @relation(fields: [walletId], references: [walletId])
  rekeningBank    RekeningBank?    @relation(fields: [rekeningBankId], references: [rekeningBankId])

  @@map("withdraw")
}

enum JenisBiaya {
  PAJAK
  LAYANAN
}

enum JenisKelamin {
  PRIA
  WANITA
}

enum JenisPetani {
  PETANI_PEMILIK
  PETANI_PENGGARAP
  BURUH_TANI
}

enum MetodeDeposit {
  TRANSFER
  VIRTUAL_ACCOUNT
  E_MONEY
}

enum PrioritasNotifikasi {
  RENDAH
  SEDANG
  TINGGI
}

enum Provider {
  CREDENTIALS
  GOOGLE
  APPLE
  GITHUB
  FACEBOOK
  TWITTER
}

enum StatusAktifNon {
  AKTIF
  NON_AKTIF
}

enum StatusNotifikasi {
  BELUM_DIBACA
  SUDAH_DIBACA
  DIHAPUS
}

enum StatusPencairan {
  DIPROSES
  SELESAI
  GAGAL
}

enum StatusPetani {
  AKTIF
  NON_AKTIF
  DALAM_VERIFIKASI
}

enum StatusRole {
  PUBLIC
  PRIVATE
}

enum StatusVerifikasiDeposit {
  MENUNGGU
  DISETUJUI
  DITOLAK
}
